name: backend deployment
run-name: Backend deployment update triggered by ${{ github.actor }} :- ${{ github.run_number }}.

on:
  push:
    branches:
      - deployment
    paths:
      - .github/workflows/backendDeploy.yml
      - backend/**

env:
  GITHUB_USER: paritosh-pranjal
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}

jobs:
  backend:
    name: backend image build and deploy
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the docker image to ghcr
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ env.GITHUB_USER }}/bootcamp26-backend:latest

  deploy:
    name: Backend EC2 Deploy
    needs: backend
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          sudo chmod 600 key.pem

      - name: Transfer run number to EC2
        run: |
          echo "${{ github.run_number }}" > scp_commands.txt
          cat scp_commands.txt
          scp -o StrictHostKeyChecking=no -i key.pem -v scp_commands.txt ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_BACKEND_IP }}:/home/ubuntu
          

      - name: SSH into EC2 and deploy Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_BACKEND_IP }} '
            docker login --username "${{ github.repository_owner }}" --password "${{ secrets.GITHUB_TOKEN }}" ghcr.io &&
            docker pull ghcr.io/${{ env.GITHUB_USER }}/bootcamp26-backend:latest &&
            docker-compose down
            docker-compose -f /home/ubuntu/docker-compose.yml up -d
          '
